{% set name = "drjit-cpp" %}
{% set version = "1.2.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # drjit
  - url: https://github.com/mitsuba-renderer/drjit/archive/v{{ version }}.tar.gz
    sha256: 8f7ae4fd6ffc826c3430c2cfc4243bd610fe86537b22a7608cf5481d7286b86d
    patches:
      - patches/drjit/0001-Use-system-libraries.patch
      - patches/drjit/0002-Fix-install-destination-paths.patch
      - patches/drjit/0003-Make-directory-before-creating-files.patch
      # - patches/drjit/0004-Fix-scatter-for-raw-pointer-target.patch

  # drjit-core
  - url: https://github.com/mitsuba-renderer/drjit-core/archive/5cf6d3730ebc931863c89071e16979153e802d09.zip
    sha256: 3a98e8cb4bcc9423743e5bd70adbf1e570f1be0a9dc892fbc052127d2f0417e4
    folder: ext/drjit-core
    patches:
      - patches/drjit-core/use-system-robin-map.patch
  - url: https://github.com/mitsuba-renderer/nanothread/archive/dd8d5f23a13c38d4d2a72f276f862c82b4ad35cc.zip
    sha256: 5645170c37be593241b43c54d9be411c63b3838f52ae8bb60085cea4267d4ff7
    folder: ext/drjit-core/ext/nanothread
  - url: https://github.com/mitsuba-renderer/cmake-defaults/archive/df60a87cff5bff303412f7bec9bb246b02e57df3.zip
    sha256: 303896dcca0a54fa959d4c2315cfd35f160d3c35a38e840cb0394b48032a2bd3
    folder: ext/drjit-core/ext/nanothread/ext/cmake-defaults
    patches:
      - patches/drjit-core/disable-march-flags.patch
  - url: https://github.com/Tessil/robin-map/archive/188c45569cc2a5dd768077c193830b51d33a5020.zip
    sha256: 084d7d72f2e669842cc9db1a6a31c15376500a90a3e525f63f569fca963a01b4
    folder: ext/drjit-core/ext/robin_map

  # nanobind
  - url: https://github.com/wjakob/nanobind/archive/116e098cfa96effca2a54e32e0ce5b93abe25393.zip
    sha256: c96d0d055b0aa6e3a18adfd04aa7e87b249d8d6633db44554c82510bd5d873f7
    folder: ext/nanobind
  - url: https://github.com/Tessil/robin-map/archive/4ec1bf19c6a96125ea22062f38c2cf5b958e448e.zip
    sha256: 78c97483a8993866074f06b25fd288cdb7b8ebd6c61c2f0c43b0e324fd56ce10
    folder: ext/nanobind/ext/robin_map

build:
  number: 0
  skip: true  # [cuda_compiler_version != "None" and (ppc64le or aarch64)]
  skip: true  # [cuda_compiler_version != "None" and win]

outputs:
  - name: drjit-cpp
    script: build_cpp.sh  # [unix]
    script: bld_cpp.bat  # [win]
    build:
      string: cpu_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]
      string: cuda{{ cuda_compiler_version | replace('.', '') }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
      skip: true  # [build_mode == "python"]
      run_exports:
        - {{ pin_subpackage('drjit-cpp', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
        - {{ stdlib('c') }}
        - cmake
        - ninja  # [unix]
      host:
        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
        - cuda-toolkit                              # [cuda_compiler_version != "None"]
        - llvmdev {{ llvm_version }}
      run:
        - cuda-cudart  # [cuda_compiler_version != "None"]
    test:
      script: run_test_cpp.sh  # [unix]
      script: run_test_cpp.bat  # [win]
      commands:
        - test -f include/drjit-core/macros.h                  # [unix]
        - test -f $PREFIX/include/drjit/fwd.h                  # [unix]
        - test -f $PREFIX/share/cmake/drjit/drjitConfig.cmake  # [unix]
        - if not exist %PREFIX%\\Library\\include\\drjit-core\\macros.h exit 1           # [win]
        - if not exist %PREFIX%\\Library\\include\\drjit\\fwd.h exit 1                   # [win]
        - if not exist %PREFIX%\\Library\\share\\cmake\\drjit\\drjitConfig.cmake exit 1  # [win]
      requires:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - cmake
        - ninja  # [unix]
      files:
        - tests/
      downstreams:
        - momentum

  - name: drjit
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    build:
      skip: true  # [build_mode == "cpp"]
      skip: true  # [linux and not x86_64]
      skip: true  # [osx and not x86_64]
      skip: true  # [win]
      skip: true  # [py<310]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
        - {{ stdlib('c') }}
        - cmake
        - make
        - ninja  # [unix]
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - python                              # [build_platform != target_platform]
      host:
        - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
        - cuda-toolkit                              # [cuda_compiler_version != "None"]
        - llvmdev {{ llvm_version }}
        # Python deps
        - hatch-fancy-pypi-readme
        - nanobind >=2.6.0
        - pip
        - python
        - scikit-build-core
        - typing_extensions
      run:
        - {{ pin_compatible('python') }}
        - cuda-cudart  # [cuda_compiler_version != "None"]
        - libcxx       # [osx]
        - libgcc       # [linux]
        - libstdcxx    # [linux]
        - python
        - python_abi * *_cp{{ CONDA_PY }}
        - typing_extensions
    test:
      imports:
        - drjit
      commands:
        - pip check
      requires:
        - pip
        - python

about:
  home: https://github.com/mitsuba-renderer/drjit
  summary: 'Dr.Jit â€” A Just-In-Time-Compiler for Differentiable Rendering'
  description: |
    Dr.Jit is a just-in-time (JIT) compiler for ordinary and differentiable computation. It was
    originally created as the numerical foundation of Mitsuba 3, a differentiable Monte Carlo
    renderer. However, Dr.Jit is a general-purpose tool that can also help with various other
    types of embarrassingly parallel computation.
  license: BSD-3-Clause
  license_file: LICENSE
  dev_url: https://github.com/mitsuba-renderer/drjit

extra:
  recipe-maintainers:
    - jeongseok-meta
